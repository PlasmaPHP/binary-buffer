{"Plasma\\BinaryBuffer":{"name":"Plasma\\BinaryBuffer","line":15,"short_desc":"A binary buffer takes binary data and buffers it. Several methods are available to get specific data.","long_desc":"","hint":null,"tags":[],"namespace":"Plasma","file":"\/volume3\/web\/github\/repos\/PlasmaPHP-binary-buffer\/master\/src\/BinaryBuffer.php","relative_file":"\/src\/BinaryBuffer.php","parent":null,"modifiers":0,"is_trait":false,"is_interface":false,"aliases":[],"errors":[],"interfaces":{"ArrayAccess":"ArrayAccess"},"traits":[],"source":null,"properties":[],"methods":{"__construct":{"name":"__construct","line":26,"short_desc":"","long_desc":"","hint":null,"hint_desc":null,"tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"append":{"name":"append","line":35,"short_desc":"Append data to the buffer.","long_desc":"","hint":[["Plasma\\BinaryBuffer",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":35,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"clear":{"name":"clear","line":86,"short_desc":"Clears the buffer.","long_desc":"","hint":[["Plasma\\BinaryBuffer",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getContents":{"name":"getContents","line":78,"short_desc":"Get the contents.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"getSize":{"name":"getSize","line":70,"short_desc":"Get the buffer size\/length.","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"prepend":{"name":"prepend","line":45,"short_desc":"Prepends data to the buffer.","long_desc":"","hint":[["Plasma\\BinaryBuffer",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"data":{"name":"data","line":45,"short_desc":"","long_desc":null,"hint":[["string",false]],"tags":[],"modifiers":"string","default":null,"variadic":false,"is_by_ref":false}}},"read":{"name":"read","line":352,"short_desc":"Reads a specified length from the buffer (and discards the read part from the buffer).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":{"length":{"name":"length","line":352,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"readDouble":{"name":"readDouble","line":172,"short_desc":"Reads a double precision float.","long_desc":"","hint":[["float",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readFloat":{"name":"readFloat","line":164,"short_desc":"Reads a single precision float.","long_desc":"","hint":[["float",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readInt1":{"name":"readInt1","line":95,"short_desc":"Parses a 1 byte \/ 8 bit integer (0 to 255).","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readInt2":{"name":"readInt2","line":103,"short_desc":"Parses a 2 byte \/ 16 bit integer (0 to 64 K \/ 0xFFFF).","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readInt3":{"name":"readInt3","line":111,"short_desc":"Parses a 3 byte \/ 24 bit integer (0 to 16 M \/ 0xFFFFFF).","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readInt4":{"name":"readInt4","line":119,"short_desc":"Parses a 4 byte \/ 32 bit integer (0 to 4 G \/ 0xFFFFFFFF).","long_desc":"","hint":[["int",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readInt8":{"name":"readInt8","line":127,"short_desc":"Parses a 8 byte \/ 64 bit integer (0 to 2^64-1).","long_desc":"","hint":[["int",false],["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readIntLength":{"name":"readIntLength","line":181,"short_desc":"Parses length-encoded binary integer from the MySQL protocol.","long_desc":"Returns the decoded integer 0 to 2^64 or `null` for special null int.","hint":[["int",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":[]},"readStringLength":{"name":"readStringLength","line":207,"short_desc":"Parses a length-encoded binary string from the MySQL protocol. If length is null, `null` will be returned.","long_desc":"","hint":[["string",false],["null",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"length":{"name":"length","line":207,"short_desc":"","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":207,"endLine":207}},"default":"null","variadic":false,"is_by_ref":false}}},"readStringNull":{"name":"readStringNull","line":221,"short_desc":"Reads NULL-terminated C string.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[["\\InvalidArgumentException",""]],"errors":[],"example":null,"source":null,"parameters":[]},"slice":{"name":"slice","line":56,"short_desc":"Slice the buffer and only keep a subset.","long_desc":"","hint":[["Plasma\\BinaryBuffer",false]],"hint_desc":"","tags":[],"modifiers":1,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"offset":{"name":"offset","line":56,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false},"length":{"name":"length","line":56,"short_desc":"","long_desc":null,"hint":[["int",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"int","attributes":{"startLine":56,"endLine":56}},"default":"null","variadic":false,"is_by_ref":false}}},"writeDouble":{"name":"writeDouble","line":315,"short_desc":"Writes a double precision float.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"float":{"name":"float","line":315,"short_desc":"","long_desc":null,"hint":[["float",false]],"tags":[],"modifiers":"float","default":null,"variadic":false,"is_by_ref":false}}},"writeFloat":{"name":"writeFloat","line":306,"short_desc":"Writes a single precision float.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"float":{"name":"float","line":306,"short_desc":"","long_desc":null,"hint":[["float",false]],"tags":[],"modifiers":"float","default":null,"variadic":false,"is_by_ref":false}}},"writeInt1":{"name":"writeInt1","line":238,"short_desc":"Writes a 1 byte \/ 8 bit integer (0 to 255).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"int":{"name":"int","line":238,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"writeInt2":{"name":"writeInt2","line":247,"short_desc":"Writes a 2 bytes \/ 16 bit integer (0 to 64 K \/ 0xFFFF).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"int":{"name":"int","line":247,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"writeInt3":{"name":"writeInt3","line":256,"short_desc":"Writes a 3 byte \/ 24 bit integer (0 to 16 M \/ 0xFFFFFF).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"int":{"name":"int","line":256,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"writeInt4":{"name":"writeInt4","line":265,"short_desc":"Writes a 4 byte \/ 32 bit integer (0 to 4 G \/ 0xFFFFFFFF).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"int":{"name":"int","line":265,"short_desc":"","long_desc":null,"hint":[["int",false]],"tags":[],"modifiers":"int","default":null,"variadic":false,"is_by_ref":false}}},"writeInt8":{"name":"writeInt8","line":274,"short_desc":"Writes a 8 byte \/ 64 bit integer (0 to 2^64-1).","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"int":{"name":"int","line":274,"short_desc":"","long_desc":null,"hint":[["string",false],["int",false]],"tags":[],"modifiers":null,"default":null,"variadic":false,"is_by_ref":false}}},"writeStringLength":{"name":"writeStringLength","line":324,"short_desc":"Builds length-encoded binary string from the MySQL protocol.","long_desc":"","hint":[["string",false]],"hint_desc":"","tags":[],"modifiers":9,"is_by_ref":"","exceptions":[],"errors":[],"example":null,"source":null,"parameters":{"str":{"name":"str","line":324,"short_desc":"","long_desc":null,"hint":[["string",false],["null",false]],"tags":[],"modifiers":{"nodeType":"NullableType","type":"string","attributes":{"startLine":324,"endLine":324}},"default":null,"variadic":false,"is_by_ref":false}}}},"constants":[]}}